(()=>{var e,t={185:(e,t,i)=>{"use strict";var r={};i.r(r),i.d(r,{add:()=>de,divide:()=>Le,multiply:()=>Be,sub:()=>rt});var s={};i.r(s),i.d(s,{and:()=>st,or:()=>nt,xor:()=>ot});var n={};i.r(n),i.d(n,{chat:()=>at,led:()=>ut});var o={};i.r(o),i.d(o,{add:()=>dt,and:()=>ht,chat:()=>gt,led:()=>lt,sub:()=>ct});var a={};i.r(a),i.d(a,{arithmetic:()=>r,boolean:()=>s,other:()=>n,trained:()=>o});var u=i(180),d=i(486);const h={arrayCount:e=>Array.from(Array(e)),buildArray:(e,t=d.identity)=>{const i="function"==typeof t?t:()=>t;return h.arrayCount(e).map(((e,t)=>i(t)))},clip:(e,t,i)=>Math.min(Math.max(e,t),i),delay:async(e=0)=>new Promise((t=>{setTimeout(t,e)})),fixZero:e=>-0===e?0:e,heEtAlWeightbuilder:e=>()=>Math.random()*Math.sqrt(2/e),mapCount:(e,t)=>h.arrayCount(e).map(t),random:(e,t)=>Math.random()*(t-e)+e,repeat:(e,t)=>{h.arrayCount(e).forEach(((e,i)=>{t(i)}))},sum:e=>e.reduce(((e,t)=>e+t),0),toArray:e=>Array.isArray(e)?e:[e]},g=h,l={enabled:!1,info:(...e)=>{l.enabled&&console.log(...e)}},c=l,p=new Map,f=(e="default")=>{(0,d.isNil)(e)?p.delete(e):p.clear()},R=(e="default")=>{const t=p.get(e),i=void 0!==t?t+1:1;return p.set(e,i),`${i}`};class m{constructor(...e){this.type=this.constructor.name,this.items=[...e]}get first(){return this.items[0]}get last(){return this.items[this.items.length-1]}get length(){return this.items.length}clear(){for(;this.length>0;)this.pop()}find(e){return this.items.find(e)}forEach(e){this.items.forEach(e)}get(e){return this.items[e]}isEmpty(){return this.items.length<1}map(e){return this.items.map(e)}reduce(e,t){return void 0===t?this.items.reduce(e):this.items.reduce(e,t)}pop(){return this.items.pop()}push(...e){return this.items.push(...e)}toJSON(e){return{items:this.map((t=>t.toJSON(e))),type:this.type}}}class w extends m{static build(){return new w}static get(e){return w.all.find((t=>t.id===e))}updateWeights(e,t,i,r){this.forEach((s=>{s.updateWeight(e,t,i,r)}))}}w.all=new w;class y{static build(e){return new y(e)}static defaultWeight(){return.01*Math.random()}constructor(e){this.type=this.constructor.name,this.source=e.source,this.target=e.target,this.weight="function"==typeof e.weight?e.weight():e.weight,this.id=(0,d.get)(e,"id",R()),this.source.outputs.push(this),this.target.inputs.push(this),w.all.push(this)}updateWeight(e,t,i=Number.MIN_VALUE,r=Number.MAX_VALUE){const s=this.weight;this.weight=s+g.clip(e*this.source.value*t,i,r)}toJSON(){return{id:this.id,sourceRef:this.source.id,targetRef:this.target.id,type:this.type,weight:this.weight}}}class x extends m{static get(e){return x.all.find((t=>t.id===e))}}x.all=new x;class b extends x{static build(...e){return new b(...e)}connectTo(e){const t=g.heEtAlWeightbuilder(this.length);this.forEach((i=>{e.forEach((e=>{y.build({source:i,target:e,weight:t})}))}))}activate(){this.forEach((e=>{e.activate()}))}}class z extends m{static build(...e){return new z(...e)}activate(){this.forEach((e=>{e.activate()}))}}class v extends x{static build(...e){return new v(...e)}connectTo(e){const t=g.heEtAlWeightbuilder(this.length);this.forEach((i=>{e.forEach((e=>{y.build({source:i,target:e,weight:t})}))}))}}class O extends x{static build(...e){return new O(...e)}activate(){this.forEach((e=>{e.activate()}))}updateWeights(){this.forEach((e=>{e.updateWeight()}))}}class L{constructor(e){this.type=this.constructor.name,this.id=(0,d.get)(e,"id",R()),this.index=(0,d.get)(e,"index",0),this.depth=(0,d.get)(e,"depth",0),this.color=(0,d.get)(e,"color","#909090"),this.value=Math.random(),this.normalizer=(0,d.get)(e,"normalizer"),this.bias=(0,d.get)(e,"bias",g.random(-1,1)),e.inputs&&(this.delta=0,this.inputs=w.build(),this.strategy=(0,d.get)(e,"strategy")),e.outputs&&(this.outputs=w.build()),x.all.push(this)}activate(){const{bias:e,inputs:t,strategy:i}=this;if(!i)return;const r=i.combine(t.map((e=>e.source.value)).concat(1),t.map((e=>e.weight)).concat(e));this.value=i.activate(r)}calculateDelta(){const{expectedValue:e,outputs:t,strategy:i,value:r}=this;if(void 0!==e)return void(this.delta=e-r);if(!i)return;const s=g.sum(t.map((e=>e.weight*e.target.delta)));this.delta=i.delta(s,r)}updateWeights(e){const{bias:t,delta:i,inputs:r,strategy:s}=this;if(!s)return;const n=(0,d.get)(s,"options.minWeight"),o=(0,d.get)(s,"options.maxWeight");r.isEmpty()||r.updateWeights(i,e,n,o),this.bias=t+i*e}toJSON(e){const t={withoutValues:!1,...e},{withoutValues:i}=t;return(0,d.omitBy)({...(0,d.pick)(this,"bias","depth","id","index","type"),normalizerRef:this.normalizer&&this.normalizer.id,normalizerOptions:this.normalizer&&this.normalizer.options,strategy:this.strategy&&this.strategy.toJSON(e),...!i&&{delta:this.delta,value:this.value}},d.isNil)}}class N extends L{static build(e){return new N(e)}constructor(e){super({color:"#909090",...e,inputs:!0,outputs:!0})}}class W extends L{static build(e){return new W(e)}constructor(e){super({color:"#1d4efd",...e,inputs:!0})}getDenormalizedValue(){return this.normalizer.from(this.value)}}class M extends L{static build(e){return new M(e)}constructor(e){super({color:"#ee651d",...e,outputs:!0})}normalizeValue(e){this.value=this.normalizer.to(e)}}class E{static build(e){return new E(e)}constructor(e){this.id=E.type,this.options=e,this.threshold=(0,d.get)(e,"threshold",.5),this.trueValue=(0,d.get)(e,"trueValue",1)}from(e){return e>=this.threshold}to(e){return e?this.trueValue:0}toJSON(){return(0,d.omitBy)({id:this.id,options:this.options},d.isNil)}}E.type="boolean";const S=E;class I{static build(e){return new I(e)}constructor(e){this.id=I.type,this.options=e}from(e){return e}to(e){return e}toJSON(){return(0,d.omitBy)({id:this.id,options:this.options},d.isNil)}}I.type="default";const A=I,{fixZero:J}=g;class V{static build(e){return new V(e)}constructor(e){this.id=V.type,this.options=e,this.min=(0,d.get)(e,"min",Number.MIN_SAFE_INTEGER);const t=(0,d.get)(e,"max",Number.MAX_SAFE_INTEGER);this.length=t-this.min}from(e){return J(Math.round(e*this.length+this.min))}to(e){return(e-this.min)/this.length}toJSON(){return(0,d.omitBy)({id:this.id,options:this.options},d.isNil)}}V.type="integer";const C=V;class D extends C{static build(e){return new D(e)}constructor(e){super(e),this.id=D.type,this.min=0,this.length=D.phrases.length-this.min}from(e){return D.phrases[super.from(e)]}to(e){return super.to(Math.max(D.phrases.indexOf(e),0))}}D.phrases=[" ","am","are","do","fine","how","i","is","know","love","marry","me","my","name","not","old","robert","single","thank","what","will","years","you","your","?"],D.type="phrase";const k=new Map([A,S,C,D].map((e=>[e.type,e]))),T=new class{constructor(e){this.id="divide",this.options=e}activate(e){return e}combine(e,t){return e.reduce(((e,i,r)=>e*i*t[r]),1)}delta(e){return e}toJSON(){return(0,d.omitBy)({id:this.id,options:this.options},d.isNil)}},{sum:j}=g;class U{constructor(e){this.id="identity",this.options=e}activate(e){return e}combine(e,t){return j(e.map(((e,i)=>e*t[i])))}delta(e){return e}toJSON(){return(0,d.omitBy)({id:this.id,options:this.options},d.isNil)}}const B=new U,q=new class extends U{constructor(){super(),this.id="logistic"}activate(e){return 1/(1+Math.exp(-e))}delta(e,t){return e*(t*(1-t))}},F=new class{constructor(e){this.id="multiply",this.options=e}activate(e){return e}combine(e,t){return e.reduce(((e,i,r)=>e*i*t[r]),1)}delta(e){return e}toJSON(){return(0,d.omitBy)({id:this.id,options:this.options},d.isNil)}},P=new class extends U{constructor(){super(),this.id="relu"}activate(e){return Math.max(0,e)}delta(e,t){return e*(t>0?1:0)}},$=new class extends U{constructor(){super(),this.id="tanh"}activate(e){return 2/(1+Math.exp(-2*e))-1}delta(e,t){return e*(1-Math.pow(t,2))}},_=new Map([T,B,q,F,P,$].map((e=>[e.id,e])));class X{static build(e={}){const{id:t}=e,i=_.get(e.strategy.id)||B;let r,s,n;i.options=e.strategy.options,e.inputs&&(r=v.build(...e.inputs.map(((e,t)=>{const i=(k.get(e.normalizerRef)||A).build(e.normalizerOptions);return M.build({bias:e.bias,id:e.id,index:t,normalizer:i})})))),e.hiddenLayers?s=z.build(...e.hiddenLayers.map((e=>new b(...e.map((e=>N.build({...e,strategy:i}))))))):e.hiddenLayersCounts&&(s=z.build(...e.hiddenLayersCounts.map(((e,t)=>new b(...g.mapCount(e,((e,r)=>N.build({depth:t+1,index:r,strategy:i})))))))),e.outputs&&(n=O.build(...e.outputs.map(((e,t)=>{const r=(k.get(e.normalizerRef)||A).build(e.normalizerOptions);return W.build({bias:e.bias,depth:(s?s.length:0)+1,id:e.id,index:t,normalizer:r,strategy:i})}))));const o=new X({hiddenLayers:s,id:t,inputLayer:r,outputLayer:n,strategy:i});return e.connections?e.connections.map((e=>y.build({id:e.id,source:x.get(e.sourceRef),target:x.get(e.targetRef),weight:e.weight}))):o.connect(),o}static buildNormalizer(e){return(k.get(e.normalizerRef)||A).build(e.normalizerOptions)}constructor(e){const{id:t,inputLayer:i,hiddenLayers:r,outputLayer:s,strategy:n}=e;this.id=t,this.inputLayer=i,this.hiddenLayers=r,this.outputLayer=s,this.strategy=n}connect(){const e=this.hiddenLayers.first,t=this.hiddenLayers.last,i=e||this.outputLayer;return this.inputLayer.connectTo(i),t&&(this.hiddenLayers.reduce(((e,t)=>(e.connectTo(t),t))),t.connectTo(this.outputLayer)),this}setInputValue(e,t){this.inputLayer.get(e).normalizeValue(t)}setInputValues(e){this.inputLayer.forEach(((t,i)=>{this.setInputValue(i,e[i])}))}getOutputValue(e){return this.outputLayer.get(e).getDenormalizedValue()}getOutputValues(){return this.outputLayer.map(((e,t)=>this.getOutputValue(t)))}run(e){return this.setInputValues(e),this.hiddenLayers.activate(),this.outputLayer.activate(),this.getOutputValues()}adjustFromUsecase(e,t=.2){const i=this.getOutputValues(),r=(0,d.isEqual)(i,g.toArray(e.outputs));if(!r){const i=g.toArray(e.outputs);this.outputLayer.forEach(((e,r)=>{e.expectedValue=e.normalizer.to(i[r]),e.calculateDelta(),e.updateWeights(t)})),(0,d.reverse)(this.hiddenLayers.items).forEach((e=>{e.forEach((e=>{e.calculateDelta(),e.updateWeights(t)}))}))}return r}trainFromUsecase(e,t){return this.run(e.inputs),this.adjustFromUsecase(e,t)}trainFromUsecases(e,t){return e.reduce(((e,i)=>this.trainFromUsecase(i,t)&&e),!0)}async train(e){c.info("starting training...");const t=(0,d.get)(e,"usecases");c.info("usecases :",t.slice(0,10).map((({inputs:e,outputs:t})=>`${e.join(",")} : ${Array.isArray(t)?t.join(","):t}`)).join("\n"));const i=(0,d.get)(e,"expectedMaxIterations"),r=(0,d.get)(e,"learningRate",.2),s=(0,d.get)(e,"hook"),n=performance.now(),o={averageDuration:0,equalToExpected:!0,iterations:0,totalDuration:0};let a=!0;do{o.iterations+=1,o.equalToExpected=this.trainFromUsecases(t,r),"function"==typeof s&&(a=await s(o))}while(!1!==a&&!o.equalToExpected&&o.iterations<i);if(o.iterations){const e=performance.now();o.totalDuration=e-n,o.averageDuration=Math.round(o.totalDuration/o.iterations)}return c.info("training result :",o),o}toJSON(e){const t=this.inputLayer.toJSON(e).items.map((e=>{const{type:t,...i}=e;return i})),i=this.hiddenLayers.toJSON(e).items.map((e=>e.items.map((e=>{const{strategy:t,type:i,...r}=e;return r})))),r=this.outputLayer.toJSON(e).items.map((e=>{const{strategy:t,type:i,...r}=e;return r})),s=w.all.toJSON(e).items.map((e=>{const{type:t,...i}=e;return i}));return{id:this.id,inputs:t,hiddenLayers:i,outputs:r,strategy:this.strategy.toJSON(e),connections:s}}}var G,Z,Y,H,K,Q,ee,te,ie=i(441);const{buildArray:re}=g,se=null===(G=ie.inputs[0])||void 0===G||null===(Z=G.normalizerOptions)||void 0===Z?void 0:Z.min,ne=null===(Y=ie.inputs[0])||void 0===Y||null===(H=Y.normalizerOptions)||void 0===H?void 0:H.max,oe=null===(K=ie.inputs[1])||void 0===K||null===(Q=K.normalizerOptions)||void 0===Q?void 0:Q.min,ae=null===(ee=ie.inputs[1])||void 0===ee||null===(te=ee.normalizerOptions)||void 0===te?void 0:te.max,ue=re(ne-se+1).reduce(((e,t)=>{const i=t+se;return e.concat(re(ae-oe+1).map((e=>{const t=e+oe;return{inputs:[i,t],outputs:i+t}})))}),[]),de={...ie,training:{...ie.training,usecases:ue}};var he,ge,le,ce,pe,fe,Re,me,we=i(968);const{buildArray:ye}=g,xe=null===(he=we.inputs[0])||void 0===he||null===(ge=he.normalizerOptions)||void 0===ge?void 0:ge.min,be=null===(le=we.inputs[0])||void 0===le||null===(ce=le.normalizerOptions)||void 0===ce?void 0:ce.max,ze=null===(pe=we.inputs[1])||void 0===pe||null===(fe=pe.normalizerOptions)||void 0===fe?void 0:fe.min,ve=null===(Re=we.inputs[1])||void 0===Re||null===(me=Re.normalizerOptions)||void 0===me?void 0:me.max,Oe=ye(be-xe+1).reduce(((e,t)=>{const i=t+xe;return e.concat(ye(ve-ze+1).map((e=>{const t=e+ze;return{inputs:[i,t],outputs:Math.round(i/t)}})))}),[]),Le={...we,training:{...we.training,usecases:Oe}};var Ne,We,Me,Ee,Se,Ie,Ae,Je,Ve=i(824);const{buildArray:Ce}=g,De=null===(Ne=Ve.inputs[0])||void 0===Ne||null===(We=Ne.normalizerOptions)||void 0===We?void 0:We.min,ke=null===(Me=Ve.inputs[0])||void 0===Me||null===(Ee=Me.normalizerOptions)||void 0===Ee?void 0:Ee.max,Te=null===(Se=Ve.inputs[1])||void 0===Se||null===(Ie=Se.normalizerOptions)||void 0===Ie?void 0:Ie.min,je=null===(Ae=Ve.inputs[1])||void 0===Ae||null===(Je=Ae.normalizerOptions)||void 0===Je?void 0:Je.max,Ue=Ce(ke-De+1).reduce(((e,t)=>{const i=t+De;return e.concat(Ce(je-Te+1).map((e=>{const t=e+Te;return{inputs:[i,t],outputs:i*t}})))}),[]),Be={...Ve,training:{...Ve.training,usecases:Ue}};var qe,Fe,Pe,$e,_e,Xe,Ge,Ze,Ye=i(907);const{buildArray:He}=g,Ke=null===(qe=Ye.inputs[0])||void 0===qe||null===(Fe=qe.normalizerOptions)||void 0===Fe?void 0:Fe.min,Qe=null===(Pe=Ye.inputs[0])||void 0===Pe||null===($e=Pe.normalizerOptions)||void 0===$e?void 0:$e.max,et=null===(_e=Ye.inputs[1])||void 0===_e||null===(Xe=_e.normalizerOptions)||void 0===Xe?void 0:Xe.min,tt=null===(Ge=Ye.inputs[1])||void 0===Ge||null===(Ze=Ge.normalizerOptions)||void 0===Ze?void 0:Ze.max,it=He(Qe-Ke+1).reduce(((e,t)=>{const i=t+Ke;return e.concat(He(tt-et+1).map((e=>{const t=e+et;return{inputs:[i,t],outputs:i-t}})))}),[]),rt={...Ye,training:{...Ye.training,usecases:it}};var st=i(625),nt=i(364),ot=i(490),at=i(158),ut=i(166),dt=i(910),ht=i(857),gt=i(67),lt=i(890),ct=i(16);const pt=a;class ft{constructor(e){this.freq=Number((0,d.get)(e,"freq",1)),this.handle=(0,d.get)(e,"handle")}start(){return!this.id&&(this.id=setInterval(this.handle,this.freq),!0)}stop(){return!!this.id&&(clearInterval(this.id),this.id=void 0,!0)}}let Rt,mt;const wt=e=>{postMessage(JSON.stringify(e))};onmessage=async({data:e})=>{const{cmd:t}=e;switch(c.info(`worker received ${t} command`),t){case"reset":{const{category:t,type:i}=e;x.all.clear(),w.all.clear(),f(),Rt=(0,d.get)(pt,[t,i]),mt=X.build(Rt),wt(x.all.toJSON()),wt(w.all.toJSON());break}case"run":{const{inputs:t}=e,i=await mt.run(t.map(((e,t)=>{switch(mt.inputLayer.get(t).normalizer.id){case"boolean":return"true"===e;case"integer":return parseInt(e,10);case"string":default:return e}})));wt({outputs:i,type:"runResult"}),wt(x.all.toJSON());break}case"train":{const{training:e}=Rt,{expectedMaxIterations:t,learningRate:i,usecases:r}=e,s=async({iterations:e})=>{wt({expectedMaxIterations:t,iterations:e,type:"trainingIteration"}),await g.delay(50)},n=new ft({freq:500,handle:()=>{wt(w.all.toJSON())}});n.start();const o=await mt.train({expectedMaxIterations:t,hook:s,learningRate:i,usecases:r});n.stop();const a=mt.toJSON({withoutValues:!0});console.log((0,u.$w)({...a,training:e},{noRefs:!0})),wt(w.all.toJSON()),wt({trainingResult:o,type:"trainingResult"});break}}}},441:e=>{const t=[{id:"ADD operation",inputs:[{normalizerRef:"integer",normalizerOptions:{min:0,max:100}},{normalizerRef:"integer",normalizerOptions:{min:0,max:100}}],outputs:[{normalizerRef:"integer",normalizerOptions:{min:0,max:200}}],hiddenLayersCounts:[],strategy:{id:"identity",options:{minWeight:-1e3,maxWeight:1e3}},training:{expectedMaxIterations:50,learningRate:.2}}];e.exports=t.length<=1?t[0]:t},968:e=>{const t=[{id:"DIVIDE operation",inputs:[{normalizerRef:"integer",normalizerOptions:{min:1,max:10}},{normalizerRef:"integer",normalizerOptions:{min:1,max:10}}],outputs:[{normalizerRef:"integer",normalizerOptions:{min:0,max:10}}],hiddenLayersCounts:[2,3,2],strategy:{id:"identity",options:{minWeight:-1e3,maxWeight:1e3}},training:{expectedMaxIterations:1e3,learningRate:.2}}];e.exports=t.length<=1?t[0]:t},824:e=>{const t=[{id:"MULTIPLY operation",inputs:[{normalizerRef:"integer",normalizerOptions:{min:0,max:10}},{normalizerRef:"integer",normalizerOptions:{min:0,max:10}}],outputs:[{normalizerRef:"integer",normalizerOptions:{min:0,max:100}}],hiddenLayersCounts:[],strategy:{id:"multiply",options:{minWeight:-1e3,maxWeight:1e3}},training:{expectedMaxIterations:2,learningRate:.2}}];e.exports=t.length<=1?t[0]:t},907:e=>{const t=[{id:"SUB operation",inputs:[{normalizerRef:"integer",normalizerOptions:{min:0,max:100}},{normalizerRef:"integer",normalizerOptions:{min:0,max:100}}],outputs:[{normalizerRef:"integer",normalizerOptions:{min:-100,max:100}}],hiddenLayersCounts:[],strategy:{id:"identity",options:{minWeight:-1e3,maxWeight:1e3}},training:{expectedMaxIterations:50,learningRate:.2}}];e.exports=t.length<=1?t[0]:t},625:e=>{const t=[{id:"AND operation",inputs:[{normalizerRef:"boolean"},{normalizerRef:"boolean"}],hiddenLayersCounts:[3],outputs:[{normalizerRef:"boolean"}],strategy:{id:"logistic",options:{minWeight:-1e3,maxWeight:1e3}},training:{expectedMaxIterations:100,learningRate:.2,usecases:[{inputs:[!1,!1],outputs:!1},{inputs:[!1,!0],outputs:!1},{inputs:[!0,!1],outputs:!1},{inputs:[!0,!0],outputs:!0}]}}];e.exports=t.length<=1?t[0]:t},364:e=>{const t=[{id:"OR operation",inputs:[{normalizerRef:"boolean"},{normalizerRef:"boolean"}],hiddenLayersCounts:[3],outputs:[{normalizerRef:"boolean"}],strategy:{id:"logistic",options:{minWeight:-1e3,maxWeight:1e3}},training:{expectedMaxIterations:100,learningRate:.2,usecases:[{inputs:[!1,!1],outputs:!1},{inputs:[!1,!0],outputs:!0},{inputs:[!0,!1],outputs:!0},{inputs:[!0,!0],outputs:!0}]}}];e.exports=t.length<=1?t[0]:t},490:e=>{const t=[{id:"XOR operation",inputs:[{normalizerRef:"boolean"},{normalizerRef:"boolean"}],hiddenLayersCounts:[3],outputs:[{normalizerRef:"boolean"}],strategy:{id:"logistic",options:{minWeight:-1e3,maxWeight:1e3}},training:{expectedMaxIterations:3e3,learningRate:.2,usecases:[{inputs:[!1,!1],outputs:!1},{inputs:[!1,!0],outputs:!0},{inputs:[!0,!1],outputs:!0},{inputs:[!0,!0],outputs:!1}]}}];e.exports=t.length<=1?t[0]:t},158:e=>{const t=[{id:"Chat bot",inputs:[{normalizerRef:"phrase"},{normalizerRef:"phrase"},{normalizerRef:"phrase"},{normalizerRef:"phrase"},{normalizerRef:"phrase"}],hiddenLayersCounts:[6],outputs:[{normalizerRef:"phrase"},{normalizerRef:"phrase"},{normalizerRef:"phrase"},{normalizerRef:"phrase"},{normalizerRef:"phrase"}],strategy:{id:"logistic",options:{minWeight:-1e3,maxWeight:1e3}},training:{expectedMaxIterations:2e3,learningRate:.2,usecases:[{inputs:["how","are","you","?"," "],outputs:["fine","thank","you"," "," "]},{inputs:["what","is","your","name","?"],outputs:["my","name","is","robert"," "]},{inputs:["how","old","are","you","?"],outputs:["i","do","not","know"," "]},{inputs:["do","you","love","me","?"],outputs:["i","love","you"," "," "]},{inputs:["will","you","marry","me","?"],outputs:["are","you","single","?"," "]}]}}];e.exports=t.length<=1?t[0]:t},166:e=>{const t=[{id:"LED operation",inputs:[{normalizerRef:"boolean"},{normalizerRef:"boolean"},{normalizerRef:"boolean"},{normalizerRef:"boolean"},{normalizerRef:"boolean"},{normalizerRef:"boolean"},{normalizerRef:"boolean"}],hiddenLayersCounts:[8],outputs:[{normalizerRef:"integer",normalizerOptions:{min:0,max:9}}],strategy:{id:"logistic",options:{minWeight:-1e3,maxWeight:1e3}},training:{expectedMaxIterations:2e3,learningRate:.2,usecases:[{inputs:[!0,!0,!0,!0,!0,!0,!1],outputs:0},{inputs:[!1,!0,!0,!1,!1,!1,!1],outputs:1},{inputs:[!0,!0,!1,!0,!0,!1,!0],outputs:2},{inputs:[!0,!0,!0,!0,!1,!1,!0],outputs:3},{inputs:[!1,!0,!0,!1,!1,!0,!0],outputs:4},{inputs:[!0,!1,!0,!0,!1,!0,!0],outputs:5},{inputs:[!0,!1,!0,!0,!0,!0,!0],outputs:6},{inputs:[!0,!0,!0,!1,!1,!1,!1],outputs:7},{inputs:[!0,!0,!0,!0,!0,!0,!0],outputs:8},{inputs:[!0,!0,!0,!0,!1,!0,!0],outputs:9}]}}];e.exports=t.length<=1?t[0]:t},910:e=>{const t=[{id:"ADD operation",inputs:[{bias:0,depth:0,id:"1",index:0,normalizerOptions:{min:0,max:100},normalizerRef:"integer"},{bias:0,depth:0,id:"2",index:1,normalizerOptions:{min:0,max:100},normalizerRef:"integer"}],hiddenLayers:[],outputs:[{bias:0,depth:1,id:"3",index:0,normalizerOptions:{min:0,max:200},normalizerRef:"integer"}],strategy:{id:"identity",options:{minWeight:-1e3,maxWeight:1e3}},connections:[{id:"4",sourceRef:"1",targetRef:"3",weight:.5},{id:"5",sourceRef:"2",targetRef:"3",weight:.5}]}];e.exports=t.length<=1?t[0]:t},857:e=>{const t=[{id:"AND operation",inputs:[{bias:-.837520028419775,depth:0,id:"1",index:0,normalizerRef:"boolean"},{bias:-.9848074921519561,depth:0,id:"2",index:1,normalizerRef:"boolean"}],hiddenLayers:[[{bias:-.20410244501524996,depth:1,id:"3",index:0},{bias:-.22622223281926324,depth:1,id:"4",index:1},{bias:.8429391423118401,depth:1,id:"5",index:2}]],outputs:[{bias:-.5400357699485421,depth:2,id:"6",index:0,normalizerRef:"boolean"}],strategy:{id:"logistic",options:{minWeight:-1e3,maxWeight:1e3}},connections:[{id:"7",sourceRef:"1",targetRef:"3",weight:.07048612690459811},{id:"8",sourceRef:"1",targetRef:"4",weight:.9808563762099686},{id:"9",sourceRef:"1",targetRef:"5",weight:.8228271648764652},{id:"10",sourceRef:"2",targetRef:"3",weight:.9550733622028551},{id:"11",sourceRef:"2",targetRef:"4",weight:.8200947797809954},{id:"12",sourceRef:"2",targetRef:"5",weight:.2730735167633184},{id:"13",sourceRef:"3",targetRef:"6",weight:.12478003943482976},{id:"14",sourceRef:"4",targetRef:"6",weight:.07692732528922198},{id:"15",sourceRef:"5",targetRef:"6",weight:.49442324722038644}]}];e.exports=t.length<=1?t[0]:t},67:e=>{const t=[{id:"Chat bot",inputs:[{bias:.8610184746710541,depth:0,id:"1",index:0,normalizerRef:"phrase"},{bias:-.8699452909197398,depth:0,id:"2",index:1,normalizerRef:"phrase"},{bias:-.4564835452036764,depth:0,id:"3",index:2,normalizerRef:"phrase"},{bias:.14613567773935765,depth:0,id:"4",index:3,normalizerRef:"phrase"},{bias:.9495839327351137,depth:0,id:"5",index:4,normalizerRef:"phrase"}],hiddenLayers:[[{bias:.39919925865685923,depth:1,id:"6",index:0},{bias:-2.497797745695511,depth:1,id:"7",index:1},{bias:1.5677478356612664,depth:1,id:"8",index:2},{bias:-1.829842349810092,depth:1,id:"9",index:3},{bias:-.6292813057014113,depth:1,id:"10",index:4},{bias:1.465522169546769,depth:1,id:"11",index:5}]],outputs:[{bias:-1.355342302942448,depth:2,id:"12",index:0,normalizerRef:"phrase"},{bias:.2868915493765967,depth:2,id:"13",index:1,normalizerRef:"phrase"},{bias:.6901393095491567,depth:2,id:"14",index:2,normalizerRef:"phrase"},{bias:-3.3672816131594834,depth:2,id:"15",index:3,normalizerRef:"phrase"},{bias:-2.6233476669316076,depth:2,id:"16",index:4,normalizerRef:"phrase"}],strategy:{id:"logistic",options:{minWeight:-1e3,maxWeight:1e3}},connections:[{id:"17",sourceRef:"1",targetRef:"6",weight:1.2027775289415104},{id:"18",sourceRef:"1",targetRef:"7",weight:5.225895647809238},{id:"19",sourceRef:"1",targetRef:"8",weight:-.39628026025375224},{id:"20",sourceRef:"1",targetRef:"9",weight:4.877178361249887},{id:"21",sourceRef:"1",targetRef:"10",weight:.340464529217619},{id:"22",sourceRef:"1",targetRef:"11",weight:.49774336803416874},{id:"23",sourceRef:"2",targetRef:"6",weight:2.084220528538878},{id:"24",sourceRef:"2",targetRef:"7",weight:1.7471636315545662},{id:"25",sourceRef:"2",targetRef:"8",weight:.6407058461998039},{id:"26",sourceRef:"2",targetRef:"9",weight:-3.1429536147275665},{id:"27",sourceRef:"2",targetRef:"10",weight:.21750511069953507},{id:"28",sourceRef:"2",targetRef:"11",weight:.858050547608829},{id:"29",sourceRef:"3",targetRef:"6",weight:1.3166752909805717},{id:"30",sourceRef:"3",targetRef:"7",weight:-3.7681713451847294},{id:"31",sourceRef:"3",targetRef:"8",weight:.553162407969252},{id:"32",sourceRef:"3",targetRef:"9",weight:-1.7660213072696682},{id:"33",sourceRef:"3",targetRef:"10",weight:-2.1468917353126917},{id:"34",sourceRef:"3",targetRef:"11",weight:.8322780833902329},{id:"35",sourceRef:"4",targetRef:"6",weight:-1.527423145291119},{id:"36",sourceRef:"4",targetRef:"7",weight:-.5538158554051614},{id:"37",sourceRef:"4",targetRef:"8",weight:.9441022256774074},{id:"38",sourceRef:"4",targetRef:"9",weight:.1683707445685575},{id:"39",sourceRef:"4",targetRef:"10",weight:.6159434224840831},{id:"40",sourceRef:"4",targetRef:"11",weight:.8373515105347205},{id:"41",sourceRef:"5",targetRef:"6",weight:-1.489064616009017},{id:"42",sourceRef:"5",targetRef:"7",weight:-.2406569998646229},{id:"43",sourceRef:"5",targetRef:"8",weight:.33146996908224685},{id:"44",sourceRef:"5",targetRef:"9",weight:3.1499688337591336},{id:"45",sourceRef:"5",targetRef:"10",weight:2.0165480718673834},{id:"46",sourceRef:"5",targetRef:"11",weight:.8200873670538696},{id:"47",sourceRef:"6",targetRef:"12",weight:.6853413617276275},{id:"48",sourceRef:"6",targetRef:"13",weight:3.0108526877601265},{id:"49",sourceRef:"6",targetRef:"14",weight:1.1874103547782775},{id:"50",sourceRef:"6",targetRef:"15",weight:-.8952815600403676},{id:"51",sourceRef:"6",targetRef:"16",weight:-1.2820951486474452},{id:"52",sourceRef:"7",targetRef:"12",weight:-3.3255386968274525},{id:"53",sourceRef:"7",targetRef:"13",weight:3.643691241869853},{id:"54",sourceRef:"7",targetRef:"14",weight:1.7313851855814975},{id:"55",sourceRef:"7",targetRef:"15",weight:4.495955314573213},{id:"56",sourceRef:"7",targetRef:"16",weight:-.6367873787255275},{id:"57",sourceRef:"8",targetRef:"12",weight:-.34463996232967403},{id:"58",sourceRef:"8",targetRef:"13",weight:-.5462488194826626},{id:"59",sourceRef:"8",targetRef:"14",weight:.5918095543677917},{id:"60",sourceRef:"8",targetRef:"15",weight:-1.8110224512538466},{id:"61",sourceRef:"8",targetRef:"16",weight:-1.6312062001968717},{id:"62",sourceRef:"9",targetRef:"12",weight:1.7213368922882109},{id:"63",sourceRef:"9",targetRef:"13",weight:-.4190602584810193},{id:"64",sourceRef:"9",targetRef:"14",weight:-3.911892989839252},{id:"65",sourceRef:"9",targetRef:"15",weight:6.985006430827335},{id:"66",sourceRef:"9",targetRef:"16",weight:-1.171882746618629},{id:"67",sourceRef:"10",targetRef:"12",weight:.6345543294486099},{id:"68",sourceRef:"10",targetRef:"13",weight:-3.3109637770872955},{id:"69",sourceRef:"10",targetRef:"14",weight:.31427998940207247},{id:"70",sourceRef:"10",targetRef:"15",weight:1.2089564572547253},{id:"71",sourceRef:"10",targetRef:"16",weight:-1.1723518995608773},{id:"72",sourceRef:"11",targetRef:"12",weight:-.47938341644396626},{id:"73",sourceRef:"11",targetRef:"13",weight:-.2594886687417807},{id:"74",sourceRef:"11",targetRef:"14",weight:.2361783687884133},{id:"75",sourceRef:"11",targetRef:"15",weight:-1.3671001136274},{id:"76",sourceRef:"11",targetRef:"16",weight:-2.0638244029341934}],training:{expectedMaxIterations:2e3,learningRate:.2,usecases:[{inputs:["how","are","you","?"," "],outputs:["fine","thank","you"," "," "]},{inputs:["what","is","your","name","?"],outputs:["my","name","is","robert"," "]},{inputs:["how","old","are","you","?"],outputs:["i","do","not","know"," "]},{inputs:["do","you","love","me","?"],outputs:["i","love","you"," "," "]},{inputs:["will","you","marry","me","?"],outputs:["are","you","single","?"," "]}]}}];e.exports=t.length<=1?t[0]:t},890:e=>{const t=[{id:"LED operation",inputs:[{bias:-.7432137687409002,depth:0,id:"1",index:0,normalizerRef:"boolean"},{bias:-.33900914308822383,depth:0,id:"2",index:1,normalizerRef:"boolean"},{bias:-.0019701190220540177,depth:0,id:"3",index:2,normalizerRef:"boolean"},{bias:-.7334466359956395,depth:0,id:"4",index:3,normalizerRef:"boolean"},{bias:-.3788240143990702,depth:0,id:"5",index:4,normalizerRef:"boolean"},{bias:-.5569988015184082,depth:0,id:"6",index:5,normalizerRef:"boolean"},{bias:.7822162011928584,depth:0,id:"7",index:6,normalizerRef:"boolean"}],hiddenLayers:[[{bias:.19488066957307212,depth:1,id:"8",index:0},{bias:-.931916338862864,depth:1,id:"9",index:1},{bias:-2.1010182733021168,depth:1,id:"10",index:2},{bias:-2.667224694623567,depth:1,id:"11",index:3},{bias:-.4534802447884449,depth:1,id:"12",index:4},{bias:1.364504008677613,depth:1,id:"13",index:5},{bias:.06474847421798936,depth:1,id:"14",index:6},{bias:1.1183529829355265,depth:1,id:"15",index:7}]],outputs:[{bias:-2.3680045702868844,depth:2,id:"16",index:0,normalizerRef:"integer",normalizerOptions:{min:0,max:9}}],strategy:{id:"logistic",options:{minWeight:-1e3,maxWeight:1e3}},connections:[{id:"17",sourceRef:"1",targetRef:"8",weight:.6378712753050386},{id:"18",sourceRef:"1",targetRef:"9",weight:.7560360286534732},{id:"19",sourceRef:"1",targetRef:"10",weight:3.9393701275477335},{id:"20",sourceRef:"1",targetRef:"11",weight:.9808387373669091},{id:"21",sourceRef:"1",targetRef:"12",weight:.6327869106021276},{id:"22",sourceRef:"1",targetRef:"13",weight:.1737807021424238},{id:"23",sourceRef:"1",targetRef:"14",weight:.2271750990775105},{id:"24",sourceRef:"1",targetRef:"15",weight:.2654365131950569},{id:"25",sourceRef:"2",targetRef:"8",weight:.3585400619792773},{id:"26",sourceRef:"2",targetRef:"9",weight:.25167266488698103},{id:"27",sourceRef:"2",targetRef:"10",weight:-.4570849435288354},{id:"28",sourceRef:"2",targetRef:"11",weight:2.2131509414878856},{id:"29",sourceRef:"2",targetRef:"12",weight:.2675623729351179},{id:"30",sourceRef:"2",targetRef:"13",weight:.560237740192189},{id:"31",sourceRef:"2",targetRef:"14",weight:.6188667519041672},{id:"32",sourceRef:"2",targetRef:"15",weight:.25269499288220004},{id:"33",sourceRef:"3",targetRef:"8",weight:.8811941808424776},{id:"34",sourceRef:"3",targetRef:"9",weight:.20211133793684333},{id:"35",sourceRef:"3",targetRef:"10",weight:-.5165038261794364},{id:"36",sourceRef:"3",targetRef:"11",weight:.6741762064512934},{id:"37",sourceRef:"3",targetRef:"12",weight:.6353994984275747},{id:"38",sourceRef:"3",targetRef:"13",weight:.6904700715446427},{id:"39",sourceRef:"3",targetRef:"14",weight:.7747398637849097},{id:"40",sourceRef:"3",targetRef:"15",weight:.4883248118343551},{id:"41",sourceRef:"4",targetRef:"8",weight:.7013381825513382},{id:"42",sourceRef:"4",targetRef:"9",weight:.3586347566970062},{id:"43",sourceRef:"4",targetRef:"10",weight:.3931318835417196},{id:"44",sourceRef:"4",targetRef:"11",weight:-5.209867869614708},{id:"45",sourceRef:"4",targetRef:"12",weight:.1617318075977359},{id:"46",sourceRef:"4",targetRef:"13",weight:.8945027098686905},{id:"47",sourceRef:"4",targetRef:"14",weight:1.1365144773342486},{id:"48",sourceRef:"4",targetRef:"15",weight:.9749553023838016},{id:"49",sourceRef:"5",targetRef:"8",weight:.43306169689665225},{id:"50",sourceRef:"5",targetRef:"9",weight:-.009533175563254387},{id:"51",sourceRef:"5",targetRef:"10",weight:-.3356942850435067},{id:"52",sourceRef:"5",targetRef:"11",weight:.19909194096270116},{id:"53",sourceRef:"5",targetRef:"12",weight:-.1810510304231916},{id:"54",sourceRef:"5",targetRef:"13",weight:.10488800652534391},{id:"55",sourceRef:"5",targetRef:"14",weight:.06472978184854933},{id:"56",sourceRef:"5",targetRef:"15",weight:.5939600996736686},{id:"57",sourceRef:"6",targetRef:"8",weight:.6248117453900757},{id:"58",sourceRef:"6",targetRef:"9",weight:.4806974248619475},{id:"59",sourceRef:"6",targetRef:"10",weight:-1.593615619562083},{id:"60",sourceRef:"6",targetRef:"11",weight:3.045343168775982},{id:"61",sourceRef:"6",targetRef:"12",weight:.02449214427988382},{id:"62",sourceRef:"6",targetRef:"13",weight:.6029287356412771},{id:"63",sourceRef:"6",targetRef:"14",weight:.8126926869352356},{id:"64",sourceRef:"6",targetRef:"15",weight:.9258614869489713},{id:"65",sourceRef:"7",targetRef:"8",weight:.8066151277041237},{id:"66",sourceRef:"7",targetRef:"9",weight:.48119690151660044},{id:"67",sourceRef:"7",targetRef:"10",weight:2.7007449202080234},{id:"68",sourceRef:"7",targetRef:"11",weight:2.987288298187818},{id:"69",sourceRef:"7",targetRef:"12",weight:.6562678080318937},{id:"70",sourceRef:"7",targetRef:"13",weight:.556475124644938},{id:"71",sourceRef:"7",targetRef:"14",weight:1.2219846282501396},{id:"72",sourceRef:"7",targetRef:"15",weight:.9172944608533895},{id:"73",sourceRef:"8",targetRef:"16",weight:-.760302206957252},{id:"74",sourceRef:"9",targetRef:"16",weight:.6545527700411367},{id:"75",sourceRef:"10",targetRef:"16",weight:4.478158032331868},{id:"76",sourceRef:"11",targetRef:"16",weight:5.986720161183776},{id:"77",sourceRef:"12",targetRef:"16",weight:.4221580668807277},{id:"78",sourceRef:"13",targetRef:"16",weight:-1.5625779617460855},{id:"79",sourceRef:"14",targetRef:"16",weight:-1.1703665289627498},{id:"80",sourceRef:"15",targetRef:"16",weight:-1.6386486272633674}]}];e.exports=t.length<=1?t[0]:t},16:e=>{const t=[{id:"SUB operation",inputs:[{bias:.4125315860985901,depth:0,id:"1",index:0,normalizerRef:"integer",normalizerOptions:{min:0,max:100}},{bias:-.08786108084946953,depth:0,id:"2",index:1,normalizerRef:"integer",normalizerOptions:{min:0,max:100}}],hiddenLayers:[],outputs:[{bias:.5019079399994767,depth:1,id:"3",index:0,normalizerRef:"integer",normalizerOptions:{min:-100,max:100}}],strategy:{id:"identity",options:{minWeight:-1e3,maxWeight:1e3}},connections:[{id:"4",sourceRef:"1",targetRef:"3",weight:.495754211459289},{id:"5",sourceRef:"2",targetRef:"3",weight:-.500072143450385}]}];e.exports=t.length<=1?t[0]:t}},i={};function r(e){if(i[e])return i[e].exports;var s=i[e]={id:e,loaded:!1,exports:{}};return t[e].call(s.exports,s,s.exports,r),s.loaded=!0,s.exports}r.m=t,r.x=()=>{r(185)},r.d=(e,t)=>{for(var i in t)r.o(t,i)&&!r.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},r.f={},r.e=e=>Promise.all(Object.keys(r.f).reduce(((t,i)=>(r.f[i](e,t),t)),[])),r.u=e=>e+".bundle.js",r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),e=r.x,r.x=()=>r.e(177).then(e),(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var t=r.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var i=t.getElementsByTagName("script");i.length&&(e=i[i.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})(),(()=>{var e={185:1};r.f.i=(t,i)=>{e[t]||importScripts(""+r.u(t))};var t=self.webpackChunkann=self.webpackChunkann||[],i=t.push.bind(t);t.push=t=>{var[s,n,o]=t;for(var a in n)r.o(n,a)&&(r.m[a]=n[a]);for(o&&o(r);s.length;)e[s.pop()]=1;i(t)}})(),r.x()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,